services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    image: apache/airflow:2.9.0
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'ta_clef_fernet_generée'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'une_chaine_aleatoire_et_secrete_1234'
      MLFLOW_TRACKING_URI: http://mlflow:5000
    volumes:
      - ./dags:/opt/airflow/dags
      - ./mlruns:/mlflow
    ports:
      - "8081:8080"
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.9.0
    restart: always
    depends_on:
      - airflow-webserver
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'ta_clef_fernet_generée'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'une_chaine_aleatoire_et_secrete_1234'
      MLFLOW_TRACKING_URI: http://mlflow:5000
    volumes:
      - ./dags:/opt/airflow/dags
      - ./mlruns:/mlflow

    command: scheduler
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: mlflow
      MYSQL_PASSWORD: mlflowpassword
      MYSQL_DATABASE: mlflow_db
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.1
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    environment:
      MLFLOW_TRACKING_URI: http://0.0.0.0:5000
      MLFLOW_ENABLE_AUTOMATIC_LOGGED_MODEL_REGISTRATION: "true"
    volumes:
      - ./mlruns:/mlflow


    command: >
       /bin/bash -c "pip install pymysql cryptography && mlflow server
       --backend-store-uri mysql+pymysql://mlflow:mlflowpassword@mysql:3306/mlflow_db
       --default-artifact-root /mlflow
       --host 0.0.0.0"



### partie de kkafka 

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181


volumes:
  postgres-db-volume:
  mysql-data:
